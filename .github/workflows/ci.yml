name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: '3.11'

#     - name: Install Poetry
#       run: |
#         curl -sSL https://install.python-poetry.org | python3 -
#         echo "${HOME}/.local/bin" >> $GITHUB_PATH

#     - name: Install dependencies
#       run: |
#         poetry install

#     - name: Run linting
#       run: |
#         poetry run flake8 service tests --count --select=E9,F63,F7,F82 --show-source --statistics
#         poetry run flake8 service tests --count --max-complexity=10 --max-line-length=127 --statistics
#         poetry run pylint service tests --max-line-length=127

#     - name: Run tests
#       run: |
#         poetry run pytest --pspec --cov=service --cov-fail-under=95
jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.11-slim


    # Steps for the build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
            
      - name: Install dependencies
        run: |
          python -m pip install poetry
          poetry config virtualenvs.create false
          poetry lock --no-update
          poetry install

      - name: Linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 service tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # test for complexity. The GitHub editor is 127 chars wide
          flake8 service tests --count --max-complexity=10 --max-line-length=127 --statistics
          # Run pylint to catch other PEP8 errors
          pylint service tests --max-line-length=127

      - name: Run unit tests with PyTest
        run: pytest --pspec --cov=service --cov-fail-under=95
        

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}